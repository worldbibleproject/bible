version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: evangelism-mysql-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: evangelism123
      MYSQL_DATABASE: evangelism_db
      MYSQL_USER: evangelism_user
      MYSQL_PASSWORD: evangelism_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - evangelism-network
    command: --default-authentication-plugin=mysql_native_password

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: evangelism-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: mysql://evangelism_user:evangelism_password@mysql:3306/evangelism_db
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ZOOM_API_KEY: ${ZOOM_API_KEY}
      ZOOM_API_SECRET: ${ZOOM_API_SECRET}
      EMAIL_HOST: ${EMAIL_HOST:-smtp.gmail.com}
      EMAIL_PORT: ${EMAIL_PORT:-587}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    ports:
      - "5000:5000"
    depends_on:
      - mysql
    networks:
      - evangelism-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: evangelism-frontend-prod
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:5000/api}
      NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL:-ws://localhost:5000}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - evangelism-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: evangelism-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - evangelism-network

volumes:
  mysql_data:

networks:
  evangelism-network:
    driver: bridge

